syntax = "proto3";
package db_transit;

service Schedule{
  rpc GetSchedule(ScheduleRequest) returns (ScheduleResponse);
}

message ScheduleRequest {
  optional uint32 timestamp = 1;
}

message ScheduleResponse {
  optional uint32 timestamp = 1;
  // optional FullSchedule full_schedule = 2;
  // Pre-compressed since compression step seems to take by far the longest
  optional bytes full_schedule = 2;
  optional ScheduleDiff schedule_diff = 3;
}

message FullSchedule {
  repeated Route routes = 1;
  repeated Stop stops = 2;
  repeated Shape shapes = 3;
}

message Route {
  optional string route_id = 1;
  repeated Trip trips = 2;
}

message Trip {
  optional string trip_id = 1;
  optional string headsign = 2;
  optional string shape_id = 3;
  repeated StopTime stop_times = 4;
  optional uint32 direction = 5;

  optional string mask_start_date = 6;
  optional uint32 date_mask = 7;
}

message StopTime {
  optional string stop_id = 1;
  optional string arrival_time = 2;
  optional string departure_time = 3;
  optional uint32 stop_sequence = 4;
}

message Stop {
  optional string stop_id = 1;
  optional string stop_name = 2;
  optional Position position = 3;
  optional string parent_stop_id = 4;
  repeated string route_ids = 5;
  repeated Transfer transfers_from = 6;
}

message Shape {
  optional string shape_id = 1;
  repeated Position points = 2;
}

message Position {
  optional double lat = 1;
  optional double lon = 2;
}

message Transfer {
  optional string from_stop_id = 1;
  optional string to_stop_id = 2;
  optional uint32 min_transfer_time = 3;
}

message ScheduleDiff {
  repeated RouteTripsDiff route_diffs = 1;
  repeated Shape added_shapes = 2;
  repeated string removed_shape_ids = 3;
  repeated Stop added_stops = 4;
  repeated string removed_stop_ids = 5;
}

message RouteTripsDiff {
  optional string route_id = 1;
  repeated TripStopTimesDiff trip_diffs = 2;
  repeated Trip added_trips = 3;
  repeated string removed_trip_ids = 4;
}

message TripStopTimesDiff {
  optional string trip_id = 1;
  repeated StopTime added_stop_times = 2;
  repeated uint32 removed_stop_seq = 3;
}
